"""
Django settings for admi_wps project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""



from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x=k@#@*nwqr1#s$_0hfxl87jxjye$9o=yujz55!ub3o*a%ub*x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'admi.apps.AdmiConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'admi_wps.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'admi_wps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'admi',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': '127.0.0.1',

    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

DATE_FORMAT = "d-m-Y"

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Africa/Tunis'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'
USE_L10N = False
# DECIMAL_SEPARATOR = ','
LOGIN_URL =  'connexion/'
LOGIN_REDIRECT_URL = 'admi:dashboard'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'wps.adm.23@gmail.com'
EMAIL_HOST_PASSWORD = 'administrations'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_PASSWORD = 'uoyj qlqv aoig jpms'





# CELERY_BROKER_URL = 'sqla+mysql://root@localhost:3306/admi'
# CELERY_RESULT_BACKEND = 'db+mysql+mysqlconnector://root@localhost:3306/admi'
# CELERY_BEAT_SCHEDULE_FILENAME = 'celerybeat-schedule'
# CELERY_TIMEZONE = 'Africa/Tunis'

# from celery.schedules import crontab
# CELERY_BEAT_SCHEDULE = {
#     'increment-solde-conge': {
#         'task': 'admi.tasks.increment_solde_conge',
#         # 'schedule': crontab(day_of_month='1'),  # Planifiez la tâche à la fin de chaque 
#         'schedule': crontab(minute='*'),
#     },
#     'raz_solde' : {
#         'task': 'admi.tasks.raz_solde',
#         'schedule': crontab(day_of_month=1, month_of_year=1),  # Planifiez la tâche au début de chaque nouvelle année

#     }
# }

# celery -A admi_wps worker -l info 
# celery -A votre_projet beat -l info

# sur pythoneverywhere superuser is bassem pwd:bassem79